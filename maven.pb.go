// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maven.proto

/*
Package parser is a generated protocol buffer package.

It is generated from these files:
	maven.proto
	parser.proto

It has these top-level messages:
	MavenResponse
	ParserRequest
	ParserResponse
	FileInfo
*/
package parser

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MavenResponse struct {
	GroupId    string                    `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	ArtifactId string                    `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
	Version    string                    `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Parent     *MavenResponse_Parent     `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	Modules    []string                  `protobuf:"bytes,5,rep,name=modules" json:"modules,omitempty"`
	Properties *MavenResponse_Properties `protobuf:"bytes,6,opt,name=properties" json:"properties,omitempty"`
}

func (m *MavenResponse) Reset()                    { *m = MavenResponse{} }
func (m *MavenResponse) String() string            { return proto.CompactTextString(m) }
func (*MavenResponse) ProtoMessage()               {}
func (*MavenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MavenResponse) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *MavenResponse) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *MavenResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MavenResponse) GetParent() *MavenResponse_Parent {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *MavenResponse) GetModules() []string {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *MavenResponse) GetProperties() *MavenResponse_Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

type MavenResponse_Parent struct {
	GroupId      string `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	ArtifactId   string `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
	Version      string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	RelativePath string `protobuf:"bytes,4,opt,name=relative_path,json=relativePath" json:"relative_path,omitempty"`
}

func (m *MavenResponse_Parent) Reset()                    { *m = MavenResponse_Parent{} }
func (m *MavenResponse_Parent) String() string            { return proto.CompactTextString(m) }
func (*MavenResponse_Parent) ProtoMessage()               {}
func (*MavenResponse_Parent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *MavenResponse_Parent) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *MavenResponse_Parent) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *MavenResponse_Parent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MavenResponse_Parent) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

type MavenResponse_Properties struct {
	JavaVersion string `protobuf:"bytes,1,opt,name=java_version,json=javaVersion" json:"java_version,omitempty"`
}

func (m *MavenResponse_Properties) Reset()                    { *m = MavenResponse_Properties{} }
func (m *MavenResponse_Properties) String() string            { return proto.CompactTextString(m) }
func (*MavenResponse_Properties) ProtoMessage()               {}
func (*MavenResponse_Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *MavenResponse_Properties) GetJavaVersion() string {
	if m != nil {
		return m.JavaVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*MavenResponse)(nil), "parser.MavenResponse")
	proto.RegisterType((*MavenResponse_Parent)(nil), "parser.MavenResponse.Parent")
	proto.RegisterType((*MavenResponse_Properties)(nil), "parser.MavenResponse.Properties")
}

func init() { proto.RegisterFile("maven.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x51, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x55, 0x08, 0xa4, 0xf4, 0xd2, 0x2e, 0x9e, 0x4c, 0x85, 0x44, 0x80, 0xa5, 0x53, 0x90, 0x80,
	0x1f, 0xc0, 0xda, 0x01, 0xa9, 0xf2, 0xc0, 0x1a, 0x1d, 0xe4, 0xa0, 0x46, 0x6d, 0x6c, 0x9d, 0xdd,
	0xfc, 0x01, 0xfe, 0x0f, 0xbf, 0x11, 0xd9, 0x4e, 0xf8, 0x18, 0x18, 0x3b, 0xbe, 0x77, 0xef, 0xde,
	0x7b, 0xa7, 0x83, 0x72, 0x87, 0x3d, 0x75, 0xb5, 0x65, 0xe3, 0x8d, 0x28, 0x2c, 0xb2, 0x23, 0xbe,
	0xfa, 0xcc, 0x61, 0xfe, 0x18, 0x78, 0x45, 0xce, 0x9a, 0xce, 0x91, 0x38, 0x83, 0xd3, 0x37, 0x36,
	0x7b, 0xdb, 0xe8, 0x56, 0x66, 0x55, 0xb6, 0x9c, 0xaa, 0x49, 0xc4, 0xab, 0x56, 0x5c, 0x40, 0x89,
	0xec, 0xf5, 0x2b, 0xbe, 0xf8, 0x30, 0x3d, 0x8a, 0x53, 0x18, 0xa9, 0x55, 0x2b, 0x24, 0x4c, 0x7a,
	0x62, 0xa7, 0x4d, 0x27, 0xf3, 0xb4, 0x3a, 0x40, 0x71, 0x0f, 0x21, 0x91, 0x3a, 0x2f, 0x8f, 0xab,
	0x6c, 0x59, 0xde, 0x9e, 0xd7, 0xa9, 0x40, 0xfd, 0x27, 0xbc, 0x5e, 0x47, 0x8d, 0x1a, 0xb4, 0xc1,
	0x6f, 0x67, 0xda, 0xfd, 0x96, 0x9c, 0x3c, 0xa9, 0xf2, 0xe0, 0x37, 0x40, 0xf1, 0x00, 0x60, 0xd9,
	0x58, 0x62, 0xaf, 0xc9, 0xc9, 0x22, 0x7a, 0x56, 0xff, 0x78, 0x7e, 0xeb, 0xd4, 0xaf, 0x9d, 0xc5,
	0x47, 0x06, 0x45, 0x8a, 0x3b, 0xd0, 0xc9, 0xd7, 0x30, 0x67, 0xda, 0xa2, 0xd7, 0x3d, 0x35, 0x16,
	0xfd, 0x26, 0x5e, 0x3e, 0x55, 0xb3, 0x91, 0x5c, 0xa3, 0xdf, 0x2c, 0x6e, 0x00, 0x7e, 0xfa, 0x89,
	0x4b, 0x98, 0xbd, 0x63, 0x8f, 0xcd, 0xe8, 0x98, 0xca, 0x94, 0x81, 0x7b, 0x4a, 0xd4, 0x73, 0x11,
	0xff, 0x77, 0xf7, 0x15, 0x00, 0x00, 0xff, 0xff, 0xca, 0x9c, 0xd4, 0x71, 0xce, 0x01, 0x00, 0x00,
}
